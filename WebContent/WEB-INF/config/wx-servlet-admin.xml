<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
						http://www.springframework.org/schema/context 
						http://www.springframework.org/schema/context/spring-context-3.2.xsd
						http://www.springframework.org/schema/aop 
						http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
						http://www.springframework.org/schema/mvc
						http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd" 
						default-lazy-init="true">
						
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"/>

	<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter" > 
		<property name="webBindingInitializer">
			<bean class="org.springframework.web.bind.support.ConfigurableWebBindingInitializer">
				<property name="conversionService" ref="conversionService"/>  
				<property name="validator">
					<bean class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean"/>
				</property>
			</bean>
		</property>
		<property name="messageConverters">
			<list>
			<!-- 这里可以根据自己的需要添加converter -->
			<bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter" />
			<bean class="org.springframework.http.converter.StringHttpMessageConverter" />
			<bean class="org.springframework.http.converter.ResourceHttpMessageConverter" />
			<bean class="org.springframework.http.converter.xml.SourceHttpMessageConverter" />
			<bean class="org.springframework.http.converter.xml.XmlAwareFormHttpMessageConverter" />
			<bean class="org.springframework.http.converter.xml.Jaxb2RootElementHttpMessageConverter" />
			<bean class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter" >
				<property name="supportedMediaTypes">  
					<list>  
						<value>text/html;charset=UTF-8</value>  
					</list>  
				</property>  
			</bean>
			</list>
		</property>
 	</bean>
	<bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
		<property name="converters">
			<set>
				<bean class="com.senyint.core.web.convertor.String2SexConvertor" />
			</set>
		</property>
	</bean>
 	<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping">
	    <property name="useTrailingSlashMatch" value="true">
	    </property>
	</bean>
 	
	<bean id="localeResolver" class="org.springframework.web.servlet.i18n.CookieLocaleResolver">
		<property name="cookieName" value="clientlanguage"/>
		<property name="cookieMaxAge" value="-1"/>
	</bean>

	<bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="defaultErrorView" value="/error/error"/> 
		<property name="exceptionMappings">
			<props>
				<prop key="org.springframework.web.bind.MissingServletRequestParameterException">/error/error</prop>
				<prop key="org.springframework.beans.TypeMismatchException">/error/error</prop>
				<prop key="org.springframework.web.bind.ServletRequestBindingException">/error/error</prop>
				<prop key="org.springframework.dao.DataIntegrityViolationException">/error/error</prop>
			</props>
		</property>
		<property name="warnLogCategory">
			<value>org.springframework.web.servlet.handler.SimpleMappingExceptionResolver</value>
		</property>
	</bean>
	
	<bean id="freemarkerViewResolver" class="com.senyint.common.web.springmvc.RichFreeMarkerViewResolver">
		<property name="prefix" value="/wx_sys/"/>
		<property name="suffix" value=".html"/>
		<property name="contentType" value="text/html; charset=UTF-8"/>
		<property name="exposeRequestAttributes" value="false"/>
		<property name="exposeSessionAttributes" value="false"/>
		<property name="exposeSpringMacroHelpers" value="false"/>
	</bean>
	
	
	<bean id="freemarkerConfig" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
		<property name="templateLoaderPath" value="/WEB-INF"/>
		<property name="freemarkerSettings">
			<props>
				<prop key="template_update_delay">0</prop>
				<prop key="defaultEncoding">UTF-8</prop>
				<prop key="url_escaping_charset">UTF-8</prop>
				<prop key="locale">zh_CN</prop>
				<prop key="boolean_format">true,false</prop>
				<prop key="datetime_format">yyyy-MM-dd HH:mm:ss</prop>
				<prop key="date_format">yyyy-MM-dd</prop>
				<prop key="time_format">HH:mm:ss</prop>
				<prop key="number_format">0.######</prop>
				<prop key="whitespace_stripping">true</prop>
				<prop key="auto_import">/ftl/wx/admin/index.ftl as p,/ftl/spring.ftl as s</prop>
			</props>
		</property>
	</bean>
	
		
	<aop:aspectj-autoproxy proxy-target-class="true"/> 
	
	<context:annotation-config/>
	
	<context:component-scan base-package="com.senyint.wx.admin.action" >
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Repository" />
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service" />
	</context:component-scan>
	
	<!-- 拦截器 -->  
<!-- 	<mvc:interceptors>
		多个拦截器,顺序执行
		<mvc:interceptor>
			<mvc:mapping path="/*" />如果不配置或/*,将拦截所有的Controller
			<bean class="com.senyint.wx.admin.interceptor.CommonInterceptor"></bean>
		</mvc:interceptor>
	</mvc:interceptors>
 -->	
</beans>
